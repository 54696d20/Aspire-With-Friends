services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    platform: linux/amd64
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "P@ssword123!"
    ports:
      - "1433:1433"
    volumes:
      - sql-data:/var/opt/mssql
    healthcheck:
      test: [ "CMD-SHELL", "timeout 1 bash -c '</dev/tcp/localhost/1433' || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
  
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: securepass123
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_listener", "5672"]
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis:7
    command: ["redis-server", "--requirepass", "Awe$0meSauce!"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "Awe$0meSauce!", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    command: start-dev --hostname-strict=false --http-relative-path=/
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: secret
    ports:
      - "8080:8080"
    depends_on:
      - postgres
  
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
  
  
  masterdataservice:
    build:
      context: .
      dockerfile: AspireApp.MasterDataService/Dockerfile
    environment:
      ConnectionStrings__DefaultConnection: "Server=sqlserver,1433;Database=MasterDataDb;User Id=sa;Password=P@ssword123!;"
      ConnectionStrings__Redis: "cache:6379,password=Awe$0meSauce!"
      ConnectionStrings__rabbitmq: "amqp://admin:securepass123@rabbitmq:5672/"
    depends_on:
      sqlserver:
        condition: service_healthy
      cache:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5316:8080"

  notificationhubservice:
    build:
      context: .
      dockerfile: AspireApp.NotificationHubService/Dockerfile
    environment:
      ConnectionStrings__rabbitmq: "amqp://admin:securepass123@rabbitmq:5672/"
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "5275:8080"

  weatherapi:
    build:
      context: .
      dockerfile: AspireApp.WeatherAPI/Dockerfile
    ports:
      - "5062:8080"

  webwasm:
    build:
      context: .
      dockerfile: AspireApp.WebWasm/Dockerfile
    ports:
      - "5071:80"
  
  yarpgateway:
    build:
      context: .
      dockerfile: YarpGateway/Dockerfile
    environment:
      ReverseProxy__Clusters__myweather-cluster__Destinations__myweatherapi-destination__Address: "http://weatherapi:8080/"
      ReverseProxy__Clusters__masterdata-cluster__Destinations__masterdataapi-destination__Address: "http://masterdataservice:8080/"
    depends_on:
      - masterdataservice
      - weatherapi
    ports:
      - "5211:8080"
        
  sql-init:
    image: mcr.microsoft.com/mssql-tools
    platform: linux/amd64
    depends_on:
      sqlserver:
        condition: service_healthy
    volumes:
      - ./scripts:/scripts
    entrypoint: >
      bash -c "
        echo 'Waiting for SQL Server...';
        sleep 10;
        /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P P@ssword123! -i /scripts/location.sql;
        echo 'Database script executed';
      "

volumes:
  sql-data:
  redis-data:
  keycloak-data:
  postgres-data: